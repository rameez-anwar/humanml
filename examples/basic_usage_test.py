#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
Basic usage example for HumanML library (Modified for Testing).
"""

import pandas as pd
import os
from sklearn.datasets import load_iris

# Ensure the local humanml is used
import sys
sys.path.insert(0, '/home/ubuntu/humanml_dev')

from humanml import HumanML

# Define output directory
output_dir = "/home/ubuntu/humanml_dev/test_output"

# Load sample dataset
print("Loading dataset...")
data = load_iris()
X = pd.DataFrame(data.data, columns=data.feature_names)
y = pd.Series(data.target)
print(f"Dataset loaded: {X.shape[0]} samples, {X.shape[1]} features")

# Initialize HumanML
print("Initializing HumanML...")
model = HumanML(
    task_type="classification",  # or "regression" or "auto"
    output_dir=output_dir,
    verbose=True,
    random_state=42
)

# Fit model
print("\nFitting model...")
model.fit(X, y)
print("Fit completed. Checking if outputs were generated automatically (they should not be)...")
# Check if files exist prematurely
report_path_check = os.path.join(output_dir, "reports", "report.pdf")
model_path_check = os.path.join(output_dir, "models", "best_model.pkl")
plot_path_check = os.path.join(output_dir, "plots", f"{model.best_model_name}_feature_importance.png")

if os.path.exists(report_path_check):
    print("ERROR: Report was generated automatically by fit()!")
else:
    print("OK: Report was not generated by fit().")

if os.path.exists(model_path_check):
    print("ERROR: Model was exported automatically by fit()!")
else:
    print("OK: Model was not exported by fit().")

if os.path.exists(plot_path_check):
    print("ERROR: Plot was generated automatically by fit()!")
else:
    print("OK: Plot was not generated by fit().")


# Make predictions
print("\nMaking predictions...")
predictions = model.predict(X)
print(f"Made {len(predictions)} predictions")

# Generate all plots
print("\nGenerating all plots...")
plot_paths = model.plot(plot_type="all", show=False) # show=False for non-interactive run
print("Plots generated:")
for p_type, p_path in plot_paths.items():
    print(f"  - {p_type}: {p_path} (Exists: {os.path.exists(p_path)})")

# Generate report
print("\nGenerating report...")
report_path = model.generate_report()
print(f"Report generated: {report_path} (Exists: {os.path.exists(report_path)})")

# Export best model
print("\nExporting best model...")
exported_model_path = model.export_model(os.path.join(output_dir, "models", "exported_best_model.pkl"))
print(f"Model exported: {exported_model_path} (Exists: {os.path.exists(exported_model_path)})")

# Get best model info
print("\nGetting best model...")
best_model_obj, model_name = model.get_best_model()
print(f"Best model name: {model_name}")
print(f"Best model object: {best_model_obj}")

print("\nExample completed successfully!")

